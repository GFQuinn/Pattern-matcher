======
if a finite state machine starts with a state that branches this will not work.

Close Bracket ).
    1. not sure if these are being handled properly

======
java REcompile "[a]" | java REsearch testFile.txt

Exception in thread "main" java.lang.StringIndexOutOfBoundsException: begin 1, end 4, length 3
        at java.base/java.lang.String.checkBoundsBeginEnd(String.java:3319)
        at java.base/java.lang.String.substring(String.java:1874)
        at REsearchFiniteStateMachine.addState(REsearchFiniteStateMachine.java:55)
        at REsearchFiniteStateMachine.<init>(REsearchFiniteStateMachine.java:16)
        at REsearch.parseFiniteStateMachine(REsearch.java:183)
======
java REcompile "aa(ab)c?" | java REsearch testFile.txt 

Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1
        at REsearchFiniteStateMachine.addState(REsearchFiniteStateMachine.java:42)
        at REsearchFiniteStateMachine.<init>(REsearchFiniteStateMachine.java:16)
        at REsearch.parseFiniteStateMachine(REsearch.java:183)

I think that might be the ?
======
java REcompile "d." | java REsearch testFile.txt

I think the wild card is being treated as a literal. that or its just not working. 

test string: "dc" <-- didn't pick it up / work

